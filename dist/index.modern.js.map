{"version":3,"file":"index.modern.js","sources":["../src/validators.tsx","../src/templator.tsx","../src/index.tsx"],"sourcesContent":["export const validators = {\n  required: (label: string, input: any, _: any) =>\n    !input && `${label} must have a value`,\n  minLength: (label: string, input: any, length: any) =>\n    input &&\n    input.length < length &&\n    `${label} must be at least ${length} characters`,\n  maxLength: (label: string, input: any, length: any) =>\n    input &&\n    input.length > length &&\n    `${label} must not be more than ${length} characters`,\n  number: (label: string, input: any, _: any) =>\n    isNaN(input) && `${label} must be a number`\n};\n","import React, {\n  createRef,\n  Fragment,\n  memo,\n  ReactElement,\n  ReactNode,\n  RefObject,\n  useState\n} from 'react';\n\nimport { validators } from './validators';\n\nexport interface IForm {\n  schema: IFormSchema;\n  dynamicProps: Record<string, any>;\n  onSubmit: (\n    values: Record<string, string>,\n    setErrors: (errors: Record<string, string | undefined>) => void\n  ) => void;\n}\n\ninterface ITemplator extends IForm {\n  formElement: (submit: () => void) => ReactElement;\n}\n\ninterface IFormContext {\n  values: Record<string, any>;\n  errors: Record<string, string | undefined>;\n  setValue: (name: string, value: any) => void;\n  inputs: Record<string, RefObject<HTMLFormElement>>;\n}\n\nexport const Templator = memo(\n  ({ schema, onSubmit, dynamicProps = {}, formElement }: ITemplator) => {\n    const [values, setValues] = useState<Record<string, any>>({});\n    const [errors, setErrors] = useState<Record<string, string | undefined>>(\n      {}\n    );\n\n    const context: IFormContext = {\n      values,\n      errors,\n      inputs: schema.reduce(\n        (obj, item) => ({\n          ...obj,\n          [item.name]: createRef()\n        }),\n        {}\n      ),\n      setValue: (name: string, value: any) => {\n        setValues({ ...values, [name]: value });\n      }\n    };\n\n    function validateInput(\n      element: IElementSchema,\n      setError?: boolean,\n      refocus?: boolean\n    ) {\n      const elementErrors = Object.keys(validators)\n        .map(\n          (validator) =>\n            element[validator] &&\n            validators[validator](\n              element.label,\n              values[element.name],\n              element[validator]\n            )\n        )\n        .filter((error) => error);\n\n      console.log(elementErrors);\n\n      if (element.validator) {\n        const customError = element.validator(\n          element.label ? element.label : element.name,\n          values[element.name]\n        );\n        if (customError) elementErrors.push(customError);\n      }\n\n      const error =\n        elementErrors && elementErrors.length > 0 && elementErrors[0];\n\n      if (setError) {\n        if (refocus && error && context.inputs[element.name].current)\n          context.inputs[element.name].current!.focus();\n\n        setErrors({\n          ...errors,\n          [element.name]: error ? `${error}` : undefined\n        });\n      }\n\n      return {\n        name: element.name,\n        error:\n          elementErrors && elementErrors.length > 0\n            ? elementErrors[0]\n            : undefined\n      };\n    }\n\n    function getInputs(schema: IFormSchema | ILayoutSchema): IElementSchema[] {\n      const inputs: IElementSchema[] = [];\n      schema.forEach((element: IElementSchema | ILayoutSchema) => {\n        if ((element as IElementSchema).name)\n          inputs.push(element as IElementSchema);\n        if ((element as ILayoutSchema).content)\n          inputs.push(...getInputs(element.content as ILayoutSchema));\n      });\n\n      return inputs;\n    }\n\n    function onFormSubmit() {\n      const errors = getInputs(schema)\n        .map((element) => validateInput(element))\n        .filter((element) => element.error)\n        .reduce(\n          (obj, item) => ({\n            ...obj,\n            [item.name]: item.error\n          }),\n          {}\n        );\n\n      setErrors(errors);\n      const errorFields = Object.keys(errors);\n      if (errorFields.length > 0) {\n        context.inputs[errorFields[0]].current!.focus();\n        return;\n      }\n\n      onSubmit(values, setErrors);\n    }\n\n    function renderLayout(schema: IFormSchema) {\n      return (\n        <Fragment>\n          {schema &&\n            schema.map(\n              (element: ILayoutSchema | IElementSchema, index: number) => {\n                if (!elements[element.type] && !layoutElements[element.type])\n                  return console.error(\n                    `react-form-templator: Element ${element.type} has not been registered`\n                  );\n\n                if (element.content) {\n                  return React.cloneElement(\n                    layoutElements[element.type]({\n                      ...element.content,\n                      children: renderLayout(element.content)\n                    })\n                  );\n                }\n\n                const formElement = element as IElementSchema;\n\n                const props = {\n                  tabIndex: index + 1,\n                  error: errors[formElement.name],\n                  ref: context.inputs[formElement.name],\n                  ...(dynamicProps[formElement.name]\n                    ? dynamicProps[formElement.name]\n                    : {}),\n\n                  validate: (refocus: boolean) =>\n                    validateInput(formElement, true, refocus),\n                  submit: onFormSubmit,\n                  onChange: (value: any) => {\n                    setErrors({ ...errors, [formElement.name]: undefined });\n                    context.setValue(formElement.name, value);\n                  },\n                  value: values[formElement.name]\n                };\n\n                return React.cloneElement(\n                  elements[formElement.type]({ ...formElement, ...props })\n                );\n              }\n            )}\n        </Fragment>\n      );\n    }\n\n    return React.cloneElement(formElement(onFormSubmit), {\n      children: renderLayout(schema)\n    });\n  }\n);\n\nexport interface IElementSchema {\n  type: string;\n  name: string;\n  label?: string;\n  validator?: (label: string, input: string) => {};\n  [data: string]: any;\n}\n\nexport interface ILayoutSchema {\n  type: string;\n  content: IFormSchema;\n  [data: string]: any;\n}\n\nexport interface IFormSchema extends Array<IElementSchema | ILayoutSchema> {}\n\nconst elements: Record<string, (props: IElementProps) => ReactElement> = {};\nconst layoutElements: Record<\n  string,\n  (props: ILayoutProps) => ReactElement\n> = {};\n\nexport function registerElement(\n  type: string,\n  render: (props: IElementProps) => ReactElement\n): void {\n  elements[type] = render;\n}\n\ninterface ILayoutProps {\n  children: ReactNode;\n  [data: string]: any;\n}\nexport function registerLayoutElement(\n  type: string,\n  render: (props: ILayoutProps) => ReactElement\n): void {\n  layoutElements[type] = render;\n}\n\ninterface IElementProps {\n  [data: string]: any;\n}\n","import React from 'react';\nimport {\n  Templator,\n  IForm,\n  IElementSchema,\n  ILayoutSchema,\n  IFormSchema,\n  registerElement,\n  registerLayoutElement\n} from './templator';\n\nexport function Form({ schema, onSubmit, dynamicProps }: IForm) {\n  return (\n    <Templator\n      onSubmit={onSubmit}\n      dynamicProps={dynamicProps}\n      schema={schema}\n      formElement={(submit: () => void) => (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            submit();\n          }}\n        />\n      )}\n    />\n  );\n}\n\nexport type { IElementSchema, ILayoutSchema, IFormSchema };\nexport { registerElement, registerLayoutElement };\n"],"names":["validators","required","label","input","_","minLength","length","maxLength","number","isNaN","Templator","memo","schema","onSubmit","dynamicProps","formElement","values","setValues","useState","errors","setErrors","context","inputs","reduce","obj","item","name","createRef","setValue","value","validateInput","element","setError","refocus","elementErrors","Object","keys","map","validator","filter","error","console","log","customError","push","current","focus","undefined","getInputs","forEach","content","onFormSubmit","errorFields","renderLayout","React","Fragment","index","elements","type","layoutElements","cloneElement","children","props","tabIndex","ref","validate","submit","onChange","registerElement","render","registerLayoutElement","Form","e","preventDefault"],"mappings":"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"}